<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qy.sp.fee.dao.impl.PipleProductDao" >
  <resultMap id="BaseResultMap" type="com.qy.sp.fee.dto.TPipleProduct" >
    <id column="PIPLE_ID" property="pipleId" jdbcType="VARCHAR" />
    <id column="PRODUCT_ID" property="productId" jdbcType="VARCHAR" />
    <result column="PIPLE_PRODUCT_CODE" property="pipleProductCode" jdbcType="VARCHAR" />
    <result column="PIPLE_PRODUCT_ABBR_CODE" property="pipleProductAbbrCode" jdbcType="VARCHAR" />
    <result column="OP_STATUS" property="opStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    PIPLE_ID, PRODUCT_ID, PIPLE_PRODUCT_CODE, PIPLE_PRODUCT_ABBR_CODE, OP_STATUS
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.qy.sp.fee.dto.TPipleProductKey" >
    select 
    <include refid="Base_Column_List" />
    from t_piple_product
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </select>
   <select id="selectByPipleProductCode" resultMap="BaseResultMap" parameterType="com.qy.sp.fee.dto.TPipleProduct" >
    select 
    <include refid="Base_Column_List" />
    from t_piple_product
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PIPLE_PRODUCT_CODE = #{pipleProductCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.qy.sp.fee.dto.TPipleProductKey" >
    delete from t_piple_product
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qy.sp.fee.dto.TPipleProduct" >
    insert into t_piple_product (PIPLE_ID, PRODUCT_ID, PIPLE_PRODUCT_CODE, 
      PIPLE_PRODUCT_ABBR_CODE, OP_STATUS)
    values (#{pipleId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{pipleProductCode,jdbcType=VARCHAR}, 
      #{pipleProductAbbrCode,jdbcType=VARCHAR}, #{opStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qy.sp.fee.dto.TPipleProduct" >
    insert into t_piple_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pipleId != null" >
        PIPLE_ID,
      </if>
      <if test="productId != null" >
        PRODUCT_ID,
      </if>
      <if test="pipleProductCode != null" >
        PIPLE_PRODUCT_CODE,
      </if>
      <if test="pipleProductAbbrCode != null" >
        PIPLE_PRODUCT_ABBR_CODE,
      </if>
      <if test="opStatus != null" >
        OP_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pipleId != null" >
        #{pipleId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="pipleProductCode != null" >
        #{pipleProductCode,jdbcType=VARCHAR},
      </if>
      <if test="pipleProductAbbrCode != null" >
        #{pipleProductAbbrCode,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null" >
        #{opStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy.sp.fee.dto.TPipleProduct" >
    update t_piple_product
    <set >
      <if test="pipleProductCode != null" >
        PIPLE_PRODUCT_CODE = #{pipleProductCode,jdbcType=VARCHAR},
      </if>
      <if test="pipleProductAbbrCode != null" >
        PIPLE_PRODUCT_ABBR_CODE = #{pipleProductAbbrCode,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null" >
        OP_STATUS = #{opStatus,jdbcType=INTEGER},
      </if>
    </set>
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy.sp.fee.dto.TPipleProduct" >
    update t_piple_product
    set PIPLE_PRODUCT_CODE = #{pipleProductCode,jdbcType=VARCHAR},
      PIPLE_PRODUCT_ABBR_CODE = #{pipleProductAbbrCode,jdbcType=VARCHAR},
      OP_STATUS = #{opStatus,jdbcType=INTEGER}
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </update>
</mapper>